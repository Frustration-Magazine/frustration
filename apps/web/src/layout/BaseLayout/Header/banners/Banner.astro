---
import { SparklesText } from "@/components/magicui/sparkles-text";
import { NumberTicker } from "@/components/magicui/number-ticker";
import { TextAnimate } from "@/components/magicui/text-animate";
import Banner2025Background from "./assets/banner_bg_2025.jpg";
import Frustrarenard from "./assets/frustrarenard.avif";
import Fist from "./assets/fist.svg";

import { motion } from "framer-motion";
import { Image } from "astro:assets";
import { aggregateRecords } from "data-access/prisma";
import { getFirstDayOfTheMonth } from "utils";
import { cn } from "@/lib/utils";

import { SUBSCRIBERS_TARGET } from "@/constants";
const backgroundUrl = `url(${Banner2025Background.src})`;

const currentDate = new Date();
const prevMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1);
const firstDayOfCurrentMonth = getFirstDayOfTheMonth(currentDate);
const firstDayOfPrevMonth = getFirstDayOfTheMonth(prevMonth);

// üîí Gestion d'erreur pour √©viter qu'une erreur de DB ne casse la page
let subscribersLastMonth: number | null = null;
let PERCENTAGE_SUBSCRIBERS: number | null = null;

try {
  const {
    result: {
      _sum: { customers: subscribers },
    },
  } = await aggregateRecords({
    table: "payments",
    dataToAggregate: {
      customers: true,
    },
    where: {
      type: {
        in: ["subscription", "subscription_creation", "subscription_update"],
      },
      date: {
        gte: firstDayOfPrevMonth,
        lt: firstDayOfCurrentMonth,
      },
    },
    success: true,
  });

  subscribersLastMonth = subscribers;
  PERCENTAGE_SUBSCRIBERS = subscribersLastMonth ? Math.round((subscribersLastMonth / SUBSCRIBERS_TARGET) * 100) : null;
} catch (error) {
  console.warn("‚ö†Ô∏è Impossible de r√©cup√©rer les donn√©es d'abonn√©s depuis la base de donn√©es:", error);
}
---

{
  subscribersLastMonth ? (
    // Container
    <a
      href="/abonnements"
      id="banner"
      class="relative bg-cover bg-repeat-round py-4"
      style={`background-image: ${backgroundUrl}`}
    >
      {/* Content */}
      <div class="relative mx-auto flex w-[400px] max-w-[90%] flex-col items-center justify-center">
        {/* Objectif */}
        <div class={cn("font-bakbak relative flex gap-2 text-4xl font-bold text-black", "text-3xl", "sm:text-4xl")}>
          <span
            class={cn(
              "absolute -left-[10px] top-1/2 -translate-x-full -translate-y-1/2 text-3xl",
              "hidden",
              "xs:block",
            )}
          >
            üöÄ
          </span>
          <span>OBJECTIF</span>
          <SparklesText
            sparklesCount={3}
            colors={{ first: "#fff200", second: "#fccf00" }}
            client:load
          >
            {SUBSCRIBERS_TARGET}
          </SparklesText>
        </div>
        {/* D√©j√† X abonn√©s ! */}
        <div class="z-1 relative inline-block px-2">
          {/* Shadow text */}
          <span
            class={cn(
              "font-bakbak -z-1 text-shadow-[1px_1px_2px_rgba(0,0,0,0.7)] absolute text-nowrap text-transparent",
              "text-xl",
              "sm:text-2xl",
            )}
          >
            D√©j√†{" "}
            <NumberTicker
              client:load
              startValue={subscribersLastMonth - 40}
              value={subscribersLastMonth}
            />{" "}
            abonn√©s !
          </span>
          {/* Real text */}
          <span class={cn("font-bakbak text-nowrap shadow-2xl", "text-xl", "sm:text-2xl")}>
            <span class="to-primary bg-gradient-to-r from-yellow-400 bg-clip-text text-transparent">D√©j√† </span>
            <NumberTicker
              client:load
              startValue={subscribersLastMonth - 40}
              className="text-primary"
              value={subscribersLastMonth}
            />
            <span class="from-primary bg-gradient-to-r to-yellow-400 bg-clip-text text-transparent"> abonn√©s !</span>
          </span>
        </div>
        {/* Gauge */}
        <div class="relative mx-auto mb-3 w-full max-w-[400px]">
          <div class="mt-2 w-full overflow-hidden rounded-full bg-yellow-100/50 shadow-lg">
            <div
              class={cn("duration-2000 shimmer-bar relative h-6 rounded-full transition-all ease-out", "h-5", "sm:h-6")}
              style={{
                width: `${PERCENTAGE_SUBSCRIBERS}%`,
                background: `linear-gradient(90deg, #FFF200 0%, #FFE135 50%, #FFF200 100%)`,
                boxShadow: `0 0 10px rgba(255, 242, 0, 0.5)`,
              }}
            />
            <Image
              src={Frustrarenard}
              class={cn(
                "absolute -top-full right-[7%]",
                "w-[30px] -translate-y-[-7%]",
                "sm:w-[40px] sm:-translate-y-[0%]",
              )}
              width="100"
              alt="Frustration renard"
            />
          </div>
        </div>
        {/* FIST */}
        <motion.div
          client:load
          initial={{ y: 50, opacity: 0 }}
          animate={{ y: 20, opacity: 1 }}
          transition={{
            type: "spring",
            stiffness: 100,
            damping: 15,
            delay: 0.5,
          }}
          className="absolute bottom-0 left-0"
        >
          <Fist class={cn("h-[50px] w-[50px]", "h-[40px] w-[40px]", "sm:h-[50px] sm:w-[50px]")} />
        </motion.div>
        {/* Informations */}
        <div>
          <div
            class={cn(
              "font-bakbak w-[250px] text-center font-bold leading-tight",
              "text-sm",
              "sm:w-[300px] sm:text-base",
            )}
          >
            <TextAnimate
              once
              segmentClassName="text-shadow-[0.5px_0.5px_0px_yellow]"
              className="leading-tight"
              delay={0.5}
              duration={4}
              client:load
              text="Soutenez Frustration Magazine et recevez le dernier num√©ro ou l'un de nos livres en √©change !"
            />
          </div>
        </div>
      </div>
    </a>
  ) : null
}

<style>
  .shimmer-bar::after {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.8), transparent);
    animation: shimmer-slide 2s ease-in-out infinite;
  }

  @keyframes shimmer-slide {
    0% {
      left: -100%;
    }
    100% {
      left: 150%;
    }
  }
</style>
