---
// üîß Utils
import { cn } from "@/libs/tailwind";

// üß± Components
import AnimatedGradient from "./AnimatedGradient";
import GradientButton from "./GradientButton";

const {
  id,
  title,
  subtitle,
  numberOfGifts,
  price,
  colorsRange,
  additionalClass,
  gradient,
} = Astro.props;
---

<aside
  class={cn(
    "flex flex-col items-center shadow-xl pb-6 w-[450px] max-w-full mx-auto",
    additionalClass,
  )}>
  <header class=`w-full relative text-white text-center px-4 py-4`>
    <AnimatedGradient
      client:load
      speed={0.08}
      blur="light"
      colors={[...colorsRange, ...colorsRange, ...colorsRange]}
    />
    <div class="relative z-10">
      <h5 class="font-bold font-bakbak text-4xl">{title}</h5>
      <h6 class="text-lg leading-none font-medium">{subtitle}</h6>
    </div>
  </header>
  <div class="flex flex-col items-center px-6 w-full grow">
    <!-- Price ü§ë -->
    <p class="price my-8 font-open-sans bg-clip-text">
      <span class="text-5xl font-bold">{price}‚Ç¨</span>
      <span>/mois</span>
    </p>
    <!-- üéÅ Gifts -->
    <p class="mt-6 mb-12 text-5xl">{"üéÅ".repeat(numberOfGifts)}</p>
    <div class="flex flex-col gap-6 self-start text-lg mb-10 grow w-full">
      <slot />
    </div>

    <!-- üÜô Button -->
    <GradientButton
      gradient={gradient}
      id={id}
      client:load>
      Choisir
    </GradientButton>
  </div>
</aside>
<script define:vars={{ id }}>
  const buttonEl = document.querySelector(`button[data-button=${id}]`);
  buttonEl.addEventListener("click", () => {
    const formulaCardLabelEl = document.querySelector(
      `[data-formula=${id}] label`,
    );
    formulaCardLabelEl.scrollIntoView({ behavior: "smooth" });
    formulaCardLabelEl.click();
  });
</script>
<style define:vars={{ startColor: colorsRange[0], endColor: colorsRange[1] }}>
  :is(aside header, aside .price) {
    background-image: linear-gradient(
      45deg,
      var(--startColor),
      var(--endColor) 80%
    );
  }

  aside button::before {
    content: "";
    width: 102%;
    height: 113%;
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: -2;
    background-image: linear-gradient(
      45deg,
      var(--startColor),
      var(--endColor) 80%
    );
  }
  aside button::after {
    content: "";
    z-index: -1;
    position: absolute;
    background: white;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
  }

  :is(aside .price, aside button) {
    color: transparent;
    position: relative;
  }
</style>
