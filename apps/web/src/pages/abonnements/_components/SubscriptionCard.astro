---
import { cn } from "@/lib/utils";

import AnimatedGradient from "./AnimatedGradient";
import GradientButton from "./GradientButton";

const { id, title, subtitle, numberOfGifts, price, colorsRange, additionalClass, gradient } = Astro.props;
---

<aside class={cn("mx-auto flex w-[450px] max-w-full flex-col items-center pb-6 shadow-xl", additionalClass)}>
  <header class=`w-full relative text-white text-center px-4 py-4`>
    <AnimatedGradient
      client:load
      speed={0.08}
      blur="light"
      colors={[...colorsRange, ...colorsRange, ...colorsRange]}
    />
    <div class="relative z-10">
      <h5 class="font-bakbak text-4xl font-bold">{title}</h5>
      <h6 class="text-lg font-medium leading-none">{subtitle}</h6>
    </div>
  </header>
  <div class="flex w-full grow flex-col items-center px-6">
    <!-- Price ü§ë -->
    <p class="price font-open-sans my-8 bg-clip-text">
      <span class="text-5xl font-bold">{price}‚Ç¨</span>
      <span>/mois</span>
    </p>
    <!-- üéÅ Gifts -->
    <p class="mb-12 mt-6 text-5xl">{"üéÅ".repeat(numberOfGifts)}</p>
    <div class="mb-10 flex w-full grow flex-col gap-6 self-start text-lg">
      <slot />
    </div>

    <!-- üÜô Button -->
    <GradientButton
      gradient={gradient}
      id={id}
      client:load
    >
      Choisir
    </GradientButton>
  </div>
</aside>
<script define:vars={{ id }}>
  const buttonEl = document.querySelector(`button[data-button=${id}]`);
  buttonEl.addEventListener("click", () => {
    const formulaCardLabelEl = document.querySelector(`[data-formula=${id}] label`);
    formulaCardLabelEl.scrollIntoView({ behavior: "smooth" });
    formulaCardLabelEl.click();
  });
</script>
<style define:vars={{ startColor: colorsRange[0], endColor: colorsRange[1] }}>
  :is(aside header, aside .price) {
    background-image: linear-gradient(45deg, var(--startColor), var(--endColor) 80%);
  }

  aside button::before {
    content: "";
    width: 102%;
    height: 113%;
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: -2;
    background-image: linear-gradient(45deg, var(--startColor), var(--endColor) 80%);
  }
  aside button::after {
    content: "";
    z-index: -1;
    position: absolute;
    background: white;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
  }

  :is(aside .price, aside button) {
    color: transparent;
    position: relative;
  }
</style>
