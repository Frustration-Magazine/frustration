---
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import PageLayout from "@/layout/PageLayout/PageLayout.astro";
import { cn } from "@/lib/utils";
import { Resend } from "resend";

const resend = new Resend(process.env.RESEND_API_KEY);

const INVALID_CAPTCHA_STATUS = {
  type: "invalid-captcha",
  message: "Veuillez valider le captcha",
};

const ERROR_STATUS = {
  type: "error",
  message: "Une erreur inattendue est survenue",
};

const SUCCESS_STATUS = {
  type: "success",
  message:
    "🙂 Votre message a bien été envoyé ! Nous tâcherons de vous répondre dans les plus brefs délais",
};

let status = null;
let email = "";
let message = "";

if (Astro.request.method === "POST") {
  if (!process.env.RESEND_API_KEY) {
    console.warn("🔎 Missing api key to add subscriber");
    status = ERROR_STATUS;
  }

  if (!process.env.HCAPTCHA_SITE_KEY) {
    console.warn("🔎 Missing hcaptcha site key");
    status = ERROR_STATUS;
  }

  const dateOptions = {
    day: "2-digit",
    month: "2-digit",
    year: "numeric",
    hour: "2-digit",
    minute: "2-digit",
    second: "2-digit",
    hour12: false,
    timeZone: "Europe/Paris",
  };
  const now = new Date();
  const formattedDate = now.toLocaleString(
    "fr-FR",
    dateOptions as Intl.DateTimeFormatOptions,
  );

  try {
    const data = await Astro.request.formData();
    const hcaptchaResponse = data.get("h-captcha-response");
    email = data.get("email")?.toString() ?? "";
    message = data.get("message")?.toString() ?? "";

    if (!hcaptchaResponse) {
      status = INVALID_CAPTCHA_STATUS;
    } else {
      await resend.emails.send({
        from: import.meta.env.MAIL_FROM,
        to: [import.meta.env.MAIL_FROM],
        subject: `Formulaire de contact - ${email}`,
        html: `
        <h3>Demande envoyée par : ${email} le ${formattedDate}</h3>
        <h5>Message :</h5>
        <p>${message}</p>
        `,
      });

      status = SUCCESS_STATUS;
      email = "";
      message = "";
    }
  } catch (error) {
    if (error instanceof Error) console.error(error.message);
    status = ERROR_STATUS;
  }
}

export const prerender = false;
---

<PageLayout title="Nous contacter">
  <article slot="content">
    <!-- 🅰️ Titles -->
    <h2
      class={cn(
        "text-balance text-center font-parisienne font-bold",
        "mb-6 text-4xl",
        "sm:mb-6 sm:text-5xl",
        "md:zs-8 md:mb-8 md:text-5xl",
        "lg:mb-10 lg:text-8xl",
      )}>
      Chère Frustration,
    </h2>
    <div
      class={cn(
        "font-open-sans space-y-3 text-center",
        "text-base space-y-1",
        "sm:text-xl sm:space-y-2",
      )}>
      <p>Une réaction à chaud ?</p>
      <p>Une question qui vous turlupine ?</p>
      <p>Une idée d'article ou d'enquête ?</p>
    </div>
    <p
      class={cn(
        "font-bold font-open-sans my-10 text-center",
        "text-2xl",
        "sm:text-3xl",
      )}>
      N'hésitez pas à nous écrire !
    </p>
    <form
      id="contact"
      method="POST"
      class="flex flex-col gap-4 font-open-sans">
      <Input
        type="email"
        placeholder="Votre email de contact"
        name="email"
        id="email"
        defaultValue={email}
        required
      />
      <Textarea
        name="message"
        placeholder="Votre message"
        rows={10}
        minLength={10}
        maxLength={5000}
        id="message"
        defaultValue={message}
        required
      />
      {
        status &&
          (status.type === ERROR_STATUS.type ? (
            <p class="bg-red-200 text-red-700 p-4">
              😔 Une erreur est survenue. Veuillez réessayer ou nous contacter
              directement à l'adresse{" "}
              <a
                href={`mailto:${import.meta.env.MAIL_FROM}`}
                class="underline font-bold">
                {import.meta.env.MAIL_FROM}
              </a>{" "}
              si le problème persiste.
            </p>
          ) : status.type === INVALID_CAPTCHA_STATUS.type ? (
            <p class="bg-red-200 text-red-700 p-4">{status.message}</p>
          ) : status.type === SUCCESS_STATUS.type ? (
            <p class="bg-green-200 text-green-700 p-4">{status.message}</p>
          ) : null)
      }
      <div class="h-captcha mx-auto" data-sitekey={process.env.HCAPTCHA_SITE_KEY}></div>
      <Button
        type="submit"
        className="text-xl font-bakbak w-fit px-8 bg-black hover:bg-black hover:text-frustration-yellow text-frustration-yellow py-6 mx-auto"
        >Envoyer</Button
      >
    </form>
  </article>
</PageLayout>

<script src="https://js.hcaptcha.com/1/api.js" async defer is:inline></script>
