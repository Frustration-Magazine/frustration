---
const { title, authorName, excerpt, image, date, categories, slug } = Astro.props;
import ClockIcon from "./icons/clock.svg?raw";
import { Image } from "astro:assets";
import { getAuthor } from "@libs/data-access/authors";

const author = await getAuthor(authorName);
let picture;
if (author) {
  picture = author.data.picture;
}
---

<post-card
  class="group/container h-[375px] min-w-full grow basis-[32%] md:min-w-[450px] lg:h-[450px]"
  style={{
    perspective: "1200px",
  }}>
  <a
    href={`/${slug}`}
    class="post-card-wrapper flex h-full cursor-pointer flex-col items-center overflow-hidden bg-black shadow-[0_0_1rem_4px_rgba(0,0,0,0.5)]">
    <thumbnail class="w-full overflow-hidden">
      <Image
        class="w-full object-cover"
        title={image.title}
        src={image.sourceUrl}
        alt={image.altText}
        width="500"
        height="300"
      />
    </thumbnail>
    <content class="grow p-6 pb-0">
      <content-header class="mb-[1rem] flex flex-col gap-[0.4rem]">
        <h5 class="text-balance font-bebas text-3xl leading-none text-yellow lg:text-4xl">
          {title}
        </h5>
        {/* Categories */}
        <div class="flex gap-1">
          {categories.map((category: string) => <span class=" bg-yellow px-2 pt-[1.5px] font-bebas text-xs uppercase leading-none text-black lg:text-base">{category}</span>)}
        </div>
        <div class="font-open-sans text-white">
          {
            picture && (
              <Image
                title="Profile picture"
                alt="alt"
                width="100"
                height="100"
                src={picture}
                class="mr-1 inline w-[15px] rounded-full"
              />
            )
          }
          <author class="author text-xs">{authorName.toUpperCase()}</author>
          <separator class="text-xs">|</separator>
          <Fragment set:html={ClockIcon} />
          <date class="date text-xs">{date}</date>
        </div>
      </content-header>
      <excerpt
        set:html={excerpt}
        class={`grid grid-rows-[0fr] lg:group-hover/container:grid-rows-[1fr] text-white font-open-sans overflow-hidden transition-[ grid-template-rows] duration-500  lg:group-hover/container:*:mb-5 *:overflow-hidden`}
        >{excerpt}
      </excerpt>
    </content>

    <overlay class="overlay absolute h-full w-full opacity-0">
      <div class="absolute left-[-50%] top-[-50%] h-[200%] w-[200%] rounded-3xl bg-[radial-gradient(circle_at_50%,hsla(0,0%,100%,0.25),transparent_50%)]"></div>
    </overlay>
  </a>
</post-card>
<script>
  import "./animate-card";
</script>
